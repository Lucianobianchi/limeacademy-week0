{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "BookAdded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "remaining",
						"type": "uint256"
					}
				],
				"name": "BookBorrowed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "remaining",
						"type": "uint256"
					}
				],
				"name": "BookReturned",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "bookId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "previousCopies",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newCopies",
						"type": "uint256"
					}
				],
				"name": "StockUpdated",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_name",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "_copies",
						"type": "uint256"
					}
				],
				"name": "addBook",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "books",
				"outputs": [
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "bool",
						"name": "inLibrary",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_bookId",
						"type": "uint256"
					}
				],
				"name": "borrowBook",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "borrowHistory",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAvailableBooks",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "bookId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "copies",
								"type": "uint256"
							}
						],
						"internalType": "struct BookLibrary.BookAvailability[]",
						"name": "availability_",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_bookId",
						"type": "uint256"
					}
				],
				"name": "getBorrowHistory",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_bookId",
						"type": "uint256"
					}
				],
				"name": "returnBook",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_bookId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_copies",
						"type": "uint256"
					}
				],
				"name": "setAvailableBookCopies",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "stockAvailable",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"addBook(string,uint256)": {
					"details": "Add a book to the library.",
					"params": {
						"_copies": "the initial copies of the book",
						"_name": "the book name"
					}
				},
				"borrowBook(uint256)": {
					"details": "Borrow book from library",
					"params": {
						"_bookId": "id of the book to borrowed"
					}
				},
				"getAvailableBooks()": {
					"details": "Gets a list of all books with copies available for borrowing.",
					"returns": {
						"availability_": "array of BookAvailability, only contains books with one or more copies."
					}
				},
				"getBorrowHistory(uint256)": {
					"details": "Returns a list of all the borrowers for a book.",
					"params": {
						"_bookId": "id of the book"
					}
				},
				"returnBook(uint256)": {
					"details": "Return book to library",
					"params": {
						"_bookId": "id of the book to return. Book has to be previously borrowed before returning."
					}
				},
				"setAvailableBookCopies(uint256,uint256)": {
					"details": "Sets the amount of available copies for an existing book in the library.",
					"params": {
						"_bookId": "id of the book",
						"_copies": "new amount of copies. Will replace the existing number of available copies. "
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/BookLibrary.sol": "BookLibrary"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/BookLibrary.sol": {
			"keccak256": "0x79dcfd3c2f494987d13a48d8789b6dbfefd929f9ee579b4d001b2cd144216d80",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://cf12790460336c86c65af840dc6a63132649215a0b38b9ed42bdd5dbeb5369c6",
				"dweb:/ipfs/Qma8a7B7ZqJZSg7cvnzrH4YSeytEiNLW1s97Pj63wN8Ki5"
			]
		},
		"contracts/Ownable.sol": {
			"keccak256": "0xc50cc16e7fc5c6c904cb1d3f3502f6869e5c2fe586e6dadc5c2117a208869a7d",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://be5c9a5d893c860bad4ae04d664c11c8574da52ff9bab000f22fd26317daf696",
				"dweb:/ipfs/QmUpwBunL414ydCgi7L686LvYzxGbvBdxdQGFYERADS4Cs"
			]
		}
	},
	"version": 1
}